  syntax = "proto3";
  // 定义包名
  package gproto;
  
  // 可以定义多个服务，每个服务内可以定义多个接口
  service FlowMaster {
    // 定义接口 (结构体可以复用)
    // 方法 (请求消息结构体) returns (返回消息结构体) {}
    rpc DoCmd (Req) returns (Res) {}
    rpc Ping (Req) returns (Res) {}
    rpc JobStart (Req) returns (Res) {}
    rpc JobStop (Req) returns (Res) {}
    rpc JobStatus (Req) returns (Res) {}
    rpc JobExecuter (Req) returns (Res) {}
    rpc FlowStart (Req) returns (Res) {}
    rpc FlowStop (Req) returns (Res) {}
    rpc FlowStatus (Req) returns (Res) {}
    rpc FlowRoutineAdd (Req) returns (Res) {}
    rpc FlowRoutineSub (Req) returns (Res) {}
    rpc FlowRoutineList (Req) returns (Res) {}
    rpc FlowCreate (Req) returns (Res) {}
    rpc MstFlowRoutineStop (Req) returns (Res) {}
    rpc MstFlowRoutineStart (Req) returns (Res) {}
  }
  
  service Slaver {
    // 定义接口 (结构体可以复用)
    // 方法 (请求消息结构体) returns (返回消息结构体) {}
    rpc DoCmd (Req) returns (Res) {}
    rpc Ping (Req) returns (Res) {}
    rpc JobStart (Req) returns (Res) {}
    rpc JobStop (Req) returns (Res) {}
    rpc JobStatus (Req) returns (Res) {}
  }

  // 定义 Req 消息结构
  message Req {
    // 类型 字段 = 标识号
    string JsonStr = 1;
  }

  // 定义 Res 消息结构
  message Res {
    string Status_Txt = 1;
    int32 Status_Code = 2;
    string Data = 3;
  }
